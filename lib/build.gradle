buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 23
        versionCode System.getenv("BUILD_NUMBER") as Integer ?: 1
        versionName "1." + android.defaultConfig.versionCode
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

ext {
    mavenVersion = "1." + System.getenv("BUILD_NUMBER")
    sonatypeUsername = System.getenv("SONATYPE_USER")
    sonatypePassword = System.getenv("SONATYPE_PASSWORD")
    //sonatypeRepo = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
    sonatypeRepo = "http://192.168.10.18:8081/nexus/content/repositories/releases/"

    allprojects { ext."signing.keyId" = System.getenv("SIGN_ID") }
    allprojects { ext."signing.secretKeyRingFile" = System.getenv("SIGN_FILE") }
    allprojects { ext."signing.password" = System.getenv("SIGN_PASSWORD") }
}

dependencies {
}

publishing {
    publications {

        repositories.maven {
            url 'http://192.168.10.18:8081/nexus/content/repositories/releases/'
            credentials {
                username "deployment"
                password "deployment123"
            }
        }

        maven(MavenPublication) {
            artifacts {
                groupId 'com.wire'
                artifactId 'wiretranslations'
                version mavenVersion
                artifact 'build/outputs/aar/lib-release.aar'
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['maven']
    publish = true
    pkg {
        userOrg = 'wire-android'
        repo = 'releases'
        name = 'wiretranslations'
        licenses = ['GPL-3.0']
        vcsUrl = 'https://github.com/wireapp'
        version {
            name = mavenVersion
            vcsTag = mavenVersion
        }
    }
}

uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: "$sonatypeRepo") {
            authentication(userName: "$sonatypeUsername", password: "$sonatypePassword")
        }
        pom.version = mavenVersion
        pom.artifactId = "wiretranslations"
        pom.groupId = "com.wire"

        pom.project {
            name 'com.wire.wiretranslations'
            packaging 'aar'
            description 'This lib contains translations resources for Wire for Android.'
            url 'https://github.com/wireapp/wire-android-translations'

            licenses {
                license {
                    name 'GNU General Public License, Version 3'
                    url 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                }
            }

            developers {
                developer {
                    name 'Bj√∂rn "The Herbinator" Herbig'
                    email 'bjoern@wire.com'
                    organization 'Wire Swiss GmbH'
                    organizationUrl 'https://wire.com/'
                }
            }

            scm {
                connection 'scm:git:git://github.com/wireapp/wire-android-translations.git'
                developerConnection 'scm:git:ssh://github.com:wireapp/wire-android-translations.git'
                url 'http://github.com/wireapp/wire-android-translations/tree/master'
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

signing {
    required { has("release") && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}
